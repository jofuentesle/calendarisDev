---
import Slider from './Slider.astro';
import Image from '~/components/common/Image.astro';
import Button from '~/components/ui/Button.astro';
import type { Hero as Props } from '~/types';

import Img1 from '~/assets/images/calendarios/slide1.jpg';
import Img2 from '~/assets/images/calendarios/slide2.jpg';
import Img3 from '~/assets/images/calendarios/slide3.jpg';

const galleryImages = [
  { src: Img1.src, alt: 'Descripción de la imagen 1' },
  { src: Img2.src, alt: 'Descripción de la imagen 2' },
  { src: Img3.src, alt: 'Descripción de la imagen 3' },
];

const {
  title = await Astro.slots.render('title'),
  subtitle = await Astro.slots.render('subtitle'),
  tagline,

  content = await Astro.slots.render('content'),
  actions = await Astro.slots.render('actions'),
  image = await Astro.slots.render('image'),
  id,
} = Astro.props;
---

<section class="relative md:-mt-[76px] not-prose" {...id ? { id } : {}}>
  <!-- Slider como fondo -->
  <div class="absolute inset-0 z-[0]">
    <Slider images={galleryImages}/>
  </div>

  <!-- Contenido del Hero -->
  <div class="absolute inset-0 pointer-events-none" aria-hidden="true">
  </div>
  <div class="relative max-w-7xl mx-auto px-4 sm:px-6">
    <div class="pt-0 md:pt-[76px] pointer-events-none"></div>
    <div class="py-12 md:py-5">
      <div class="text-center pb-10 md:pb-16 max-w-5xl mx-auto">
        {
          tagline && (
            <p
              class="text-base text-secondary dark:text-blue-900 font-bold tracking-wide uppercase"
              set:html={tagline}
            />
          )
        }
        {
          title && (
            <h1
              class="text-5xl ismd:text-6xl font-bold leading-tighter tracking-tighter mb-4 font-heading dark:text-black"
              set:html={title}
            />
          )
        }
        <div class="max-w-3xl mx-auto">
          {subtitle && <p class="text-xl text-muted mb-6 dark:text-black" set:html={subtitle} />}

          <div class="flex flex-col sm:flex-row justify-center gap-4">
            
            <!-- Botón 1 -->
            <Button 
              href="/mesa/espiral" 
              text="Mesa espiral" 
              class="w-full sm:mb-0 bg-primary" 
            />
            
            <!-- Botón 2 -->
            <Button 
              href="/mesa/triangular" 
              text="Mesa triangular" 
              class= "w-full sm:mb-0 hover:bg-green-600" 
            />
            
            <!-- Botón 3 -->
            <Button 
              href="/pared/espiral" 
              text="Pared espiral" 
              class=" w-full sm:mb-0 hover:bg-red-600" 
            />
            
            <!-- Botón 4 -->
            <Button 
              href="/pared/revista" 
              text="Pared revista" 
              class="w-full sm:mb-0 hover:bg-yellow-600" 
            />
          </div>


          {
            actions && (
              <div class="max-w-xs sm:max-w-md m-auto flex flex-nowrap flex-col sm:flex-row sm:justify-center gap-4 MD">
                {Array.isArray(actions) ? (
                  actions.map((action) => (
                    <div class="flex w-full sm:w-auto">
                      <Button {...(action || {})} class="w-full sm:mb-0" />
                    </div>
                  ))
                ) : (
                  <Fragment set:html={actions} />
                )}
              </div>
            )
          }
        </div>
        {content && <Fragment set:html={content} />}
      </div>
      <div>
        {
          image && (
            <div class="relative m-auto max-w-5xl">
              {typeof image === 'string' ? (
                <Fragment set:html={image} />
              ) : (
                <Image
                  class="mx-auto rounded-md w-full"
                  widths={[400, 768, 1024, 2040]}
                  sizes="(max-width: 767px) 400px, (max-width: 1023px) 768px, (max-width: 2039px) 1024px, 2040px"
                  loading="eager"
                  width={1024}
                  height={576}
                  {...image}
                />
              )}
            </div>
          )
        }
      </div>
    </div>
  </div>
</section>
<style>


    /* Estilo por defecto (cuando no hay clase "dark") */
  .isTxtColor {
    color: #030620;
  }

  /* Estilo cuando "html" tiene la clase "dark" */
  html.dark .isTxtColor {
    color: #030620;
  }

  html.dark .isTxtSub {
    color:rgba(109, 41, 217, 1);
  }

  slider-container {
    position: absolute;
    inset: 0;
    z-index: -1; /* Asegura que el slider esté detrás del contenido */
  }
  
  .swiper {
    width: 100%;
    height: 100%;
  }

  .swiper-wrapper {
    display: flex;
    width: 100%;
    height: 100%;
  }

  .swiper-slide {
    width: 100%;
    height: 100%;
  }

  .swiper-slide img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
</style>